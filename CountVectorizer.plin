{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CountVectorizer\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from collections import Counter\n",
    "\n",
    "vect = CountVectorizer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "text = [\n",
    "    '#MachineLearning with Text in scikit learn http://buff.ly/2dJINuD  #DataScience #IoT #BigData #AI',\n",
    "    'How The Internet Of Things Will Impact Your Everyday Life http://buff.ly/2dIUyMO  #IoT #DataScience #BigData #MachineLearning',\n",
    "    'The best Brazilian Captain passed away this day. Captain of Brazil Team in 1970. #RIPCapita Carlos Alberto Torres.',\n",
    "    '10 Videos Featuring Data Science Topics. By Vincent http://buff.ly/2eCWIkA  #DataScience #BigData #IoT #MachineLearning',\n",
    "    'Data Preparation Tips, Tricks, and Tools: An Interview with the Insiders http://buff.ly/2dDSJ3E  #DataScience #BigData #IoT #MachineLearning',\n",
    "    'Deep Learning with Neural Networks and TensorFlow Introduction - Youtube http://buff.ly/2efTvdQ  #DataScience #MachineLearning #IoT #BigData',\n",
    "    'Matplotlib Tutorial - a youtube course http://buff.ly/2eBK4AQ  #DadaScience #MachineLearning #IoT #BigData',\n",
    "    'Kaggle Releases Data Sets About Global Warming: Make your own Predictions – Data Science Central http://buff.ly/2dUFLQf  #DataScience #IoT',\n",
    "    '#MachineLearning as a Service http://buff.ly/2ep1Jjk  #BigData #IoT #DataScience',\n",
    "    '50 Predictions for the Internet of Things in 2016 https://goo.gl/5Zv28z  #IoT #BigData #DataScience #MachineLearning',\n",
    "    'IoT Programming Languages http://flip.it/wtVufo  #IoT #BigData #DataScience',\n",
    "    'An Introduction to Variable and Feature Selection  #dataScience #IoT #BigData http://www.datasciencecentral.com/profiles/blogs/an-introduction-to-variable-and-feature-selection …',\n",
    "    'Use the simulated device to experience the IBM Watson IoT Platform http://buff.ly/2ekeKGi  #IoT #BigData #DataScience #DataViz',\n",
    "    'Top 10 Data Science and Machine Learning Podcasts http://buff.ly/2erx7cI  #MachineLearning',\n",
    "    'Adorei esse copão de café. SVM é fantástico algoritmo de #MachineLearning',\n",
    "    'IBM Watsons latest gig: Improving cancer treatment with genomic sequencing http://buff.ly/2dZ5lVP  #DataScience #MachineLearning #BigData',\n",
    "    'An Introduction to Implementing Neural Networks using TensorFlow http://buff.ly/2ervn3s  #DataScience #MachineLearning #IoT #BigData',\n",
    "    'Oi testa serviço de monitoramento baseado na Internet das Coisas http://buff.ly/2e3gg21  #DataScience #MachineLearning #IoT #BigData',\n",
    "    'Moving from R to Python: The Libraries You Need to Know http://buff.ly/2eeUHuE  #DataScience #MachineLearning #IoT #BigData',\n",
    "    'Internet of Things Articles : IoT startup and smart cam-maker Smartfrog raises further $20M http://buff.ly/2ei1Kky  #MachineLearning #IoT',\n",
    "    'An overview of gradient descent optimization algorithms http://buff.ly/2dldKVO  #DataScience #MachineLearning #IoT #BigData',\n",
    "    'Datafloq - 8 Easy Steps to Become a Data Scientist http://buff.ly/2en6TbA  #DataScience #IoT #BigData #MachineLearning',\n",
    "    'Time to educate teachers about #datascience'\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CountVectorizer()"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vect.fit(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['10',\n",
       " '1970',\n",
       " '2016',\n",
       " '20m',\n",
       " '2ddsj3e',\n",
       " '2diuymo',\n",
       " '2djinud',\n",
       " '2dldkvo',\n",
       " '2duflqf',\n",
       " '2dz5lvp',\n",
       " '2e3gg21',\n",
       " '2ebk4aq',\n",
       " '2ecwika',\n",
       " '2eeuhue',\n",
       " '2eftvdq',\n",
       " '2ei1kky',\n",
       " '2ekekgi',\n",
       " '2en6tba',\n",
       " '2ep1jjk',\n",
       " '2ervn3s',\n",
       " '2erx7ci',\n",
       " '50',\n",
       " '5zv28z',\n",
       " 'about',\n",
       " 'adorei',\n",
       " 'ai',\n",
       " 'alberto',\n",
       " 'algorithms',\n",
       " 'algoritmo',\n",
       " 'an',\n",
       " 'and',\n",
       " 'articles',\n",
       " 'as',\n",
       " 'away',\n",
       " 'baseado',\n",
       " 'become',\n",
       " 'best',\n",
       " 'bigdata',\n",
       " 'blogs',\n",
       " 'brazil',\n",
       " 'brazilian',\n",
       " 'buff',\n",
       " 'by',\n",
       " 'café',\n",
       " 'cam',\n",
       " 'cancer',\n",
       " 'captain',\n",
       " 'carlos',\n",
       " 'central',\n",
       " 'coisas',\n",
       " 'com',\n",
       " 'copão',\n",
       " 'course',\n",
       " 'dadascience',\n",
       " 'das',\n",
       " 'data',\n",
       " 'datafloq',\n",
       " 'datascience',\n",
       " 'datasciencecentral',\n",
       " 'dataviz',\n",
       " 'day',\n",
       " 'de',\n",
       " 'deep',\n",
       " 'descent',\n",
       " 'device',\n",
       " 'easy',\n",
       " 'educate',\n",
       " 'esse',\n",
       " 'everyday',\n",
       " 'experience',\n",
       " 'fantástico',\n",
       " 'feature',\n",
       " 'featuring',\n",
       " 'flip',\n",
       " 'for',\n",
       " 'from',\n",
       " 'further',\n",
       " 'genomic',\n",
       " 'gig',\n",
       " 'gl',\n",
       " 'global',\n",
       " 'goo',\n",
       " 'gradient',\n",
       " 'how',\n",
       " 'http',\n",
       " 'https',\n",
       " 'ibm',\n",
       " 'impact',\n",
       " 'implementing',\n",
       " 'improving',\n",
       " 'in',\n",
       " 'insiders',\n",
       " 'internet',\n",
       " 'interview',\n",
       " 'introduction',\n",
       " 'iot',\n",
       " 'it',\n",
       " 'kaggle',\n",
       " 'know',\n",
       " 'languages',\n",
       " 'latest',\n",
       " 'learn',\n",
       " 'learning',\n",
       " 'libraries',\n",
       " 'life',\n",
       " 'ly',\n",
       " 'machine',\n",
       " 'machinelearning',\n",
       " 'make',\n",
       " 'maker',\n",
       " 'matplotlib',\n",
       " 'monitoramento',\n",
       " 'moving',\n",
       " 'na',\n",
       " 'need',\n",
       " 'networks',\n",
       " 'neural',\n",
       " 'of',\n",
       " 'oi',\n",
       " 'optimization',\n",
       " 'overview',\n",
       " 'own',\n",
       " 'passed',\n",
       " 'platform',\n",
       " 'podcasts',\n",
       " 'predictions',\n",
       " 'preparation',\n",
       " 'profiles',\n",
       " 'programming',\n",
       " 'python',\n",
       " 'raises',\n",
       " 'releases',\n",
       " 'ripcapita',\n",
       " 'science',\n",
       " 'scientist',\n",
       " 'scikit',\n",
       " 'selection',\n",
       " 'sequencing',\n",
       " 'service',\n",
       " 'serviço',\n",
       " 'sets',\n",
       " 'simulated',\n",
       " 'smart',\n",
       " 'smartfrog',\n",
       " 'startup',\n",
       " 'steps',\n",
       " 'svm',\n",
       " 'teachers',\n",
       " 'team',\n",
       " 'tensorflow',\n",
       " 'testa',\n",
       " 'text',\n",
       " 'the',\n",
       " 'things',\n",
       " 'this',\n",
       " 'time',\n",
       " 'tips',\n",
       " 'to',\n",
       " 'tools',\n",
       " 'top',\n",
       " 'topics',\n",
       " 'torres',\n",
       " 'treatment',\n",
       " 'tricks',\n",
       " 'tutorial',\n",
       " 'use',\n",
       " 'using',\n",
       " 'variable',\n",
       " 'videos',\n",
       " 'vincent',\n",
       " 'warming',\n",
       " 'watson',\n",
       " 'watsons',\n",
       " 'will',\n",
       " 'with',\n",
       " 'wtvufo',\n",
       " 'www',\n",
       " 'you',\n",
       " 'your',\n",
       " 'youtube']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vect.get_feature_names()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
